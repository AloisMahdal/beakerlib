#!/usr/bin/python

import sys, os
import xmlrpclib
from datetime import datetime
from datetime import timedelta

if __name__ == '__main__':
    expiredelta = datetime.now() + timedelta(weeks=-1)
    bootapi = capi.BootAPI()
    settings = bootapi.settings()
    inventory = xmlrpclib.ServerProxy('%s/RPC2' % settings.redhat_management_server, allow_none=True)
    distros = bootapi.distros()
    rdistros = []
    for distro in distros:
        if not os.path.exists(distro.kernel):
            remote.remove_distro(distro.name, token)
            rdistros.append(distro.name)
            continue
        if 'tree' in distro.ks_meta:
            if distro.ks_meta['tree'].find('nightly') == -1:
                continue
            distro_timestamp = datetime.fromtimestamp(float(distro.tree_build_time))
            if distro_timestamp < expiredelta:
                bootapi.remove_distro(distro, recursive=True)
                rdistros.append(distro.name)
    inventory.labcontrollers.removeDistros(settings.server, rdistros)
